
from pprint import pprint
from app import app
from flask import render_template
from db import get_cursor

@app.route('/player')
def player_list():
    # List some players
    return ''

@app.route('/player/<id>')
def player(id):
    player_sql = '''
    SELECT
        FIRST_NAME,
        LAST_NAME,
        DOB,
        HOMETOWN
    FROM
        JPEEL.PLAYERS
    WHERE
        ID = :id
    '''.strip()

    season_avg_sql = '''
SELECT
    g.SEASON,
    ROUND(AVG(PASSING_YARDS),2) AVG_PASSING_YARDS,
    ROUND(AVG(PASSING_TOUCHDOWNS),2) AVG_PASSING_TOUCHDOWNS,
    ROUND(AVG(PASSING_INTERCEPTIONS),2) AVG_PASSING_INTERCEPTIONS,
    ROUND(AVG(PASSING_ATTEMPTS),2) AVG_PASSING_ATTEMPTS,
    ROUND(AVG(PASSING_COMPLETIONS),2) AVG_PASSING_COMPLETIONS,
    ROUND(AVG(RUSHING_YARDS),2) AVG_RUSHING_YARDS,
    ROUND(AVG(RUSHING_TOUCHDOWNS),2) AVG_RUSHING_TOUCHDOWNS,
    ROUND(AVG(RUSHING_ATTEMPTS),2) AVG_RUSHING_ATTEMPTS,
    ROUND(AVG(RECEIVING_YARDS),2) AVG_RECEIVING_YARDS,
    ROUND(AVG(RECEIVING_TOUCHDOWNS),2) AVG_RECEIVING_TOUCHDOWNS
FROM
    JPEEL.PLAYERS p
    JOIN JPEEL.STATS2 s ON (p.ID = s.PLAYER_ID)
    JOIN JPEEL.GAME g ON (s.GAME_ID = g.ID)
WHERE
    p.ID = :id
GROUP BY (g.SEASON)
ORDER BY (g.SEASON) DESC
    '''.strip()

    all_avgs_sql = '''
WITH player_avgs AS (
SELECT
    g.SEASON,
    ROUND(AVG(PASSING_YARDS),2) AVG_PASSING_YARDS,
    ROUND(AVG(PASSING_TOUCHDOWNS),2) AVG_PASSING_TOUCHDOWNS,
    ROUND(AVG(PASSING_INTERCEPTIONS),2) AVG_PASSING_INTERCEPTIONS,
    ROUND(AVG(PASSING_ATTEMPTS),2) AVG_PASSING_ATTEMPTS,
    ROUND(AVG(PASSING_COMPLETIONS),2) AVG_PASSING_COMPLETIONS,
    ROUND(AVG(RUSHING_YARDS),2) AVG_RUSHING_YARDS,
    ROUND(AVG(RUSHING_TOUCHDOWNS),2) AVG_RUSHING_TOUCHDOWNS,
    ROUND(AVG(RUSHING_ATTEMPTS),2) AVG_RUSHING_ATTEMPTS,
    ROUND(AVG(RECEIVING_YARDS),2) AVG_RECEIVING_YARDS,
    ROUND(AVG(RECEIVING_TOUCHDOWNS),2) AVG_RECEIVING_TOUCHDOWNS
FROM
    JPEEL.PLAYERS p
    JOIN JPEEL.STATS2 s ON (p.ID = s.PLAYER_ID)
    JOIN JPEEL.GAME g ON (s.GAME_ID = g.ID)
WHERE
    p.ID = :id
GROUP BY (g.SEASON)
ORDER BY (g.SEASON) DESC
), pa_avgs AS (
SELECT
    g.SEASON,
    ROUND(AVG(PASSING_YARDS),2) AVG_PASSING_YARDS,
    ROUND(AVG(PASSING_TOUCHDOWNS),2) AVG_PASSING_TOUCHDOWNS,
    ROUND(AVG(PASSING_INTERCEPTIONS),2) AVG_PASSING_INTERCEPTIONS,
    ROUND(AVG(PASSING_ATTEMPTS),2) AVG_PASSING_ATTEMPTS,
    ROUND(AVG(PASSING_COMPLETIONS),2) AVG_PASSING_COMPLETIONS
FROM
    JPEEL.PLAYERS p
    JOIN JPEEL.STATS2 s ON (p.ID = s.PLAYER_ID)
    JOIN JPEEL.GAME g ON (s.GAME_ID = g.ID)
WHERE
    s.PASSING_YARDS > 10
GROUP BY (g.SEASON)
ORDER BY (g.SEASON) DESC
), re_avgs AS (
SELECT
    g.SEASON,
    ROUND(AVG(RECEIVING_YARDS),2) AVG_RECEIVING_YARDS,
    ROUND(AVG(RECEIVING_TOUCHDOWNS),2) AVG_RECEIVING_TOUCHDOWNS
FROM
    JPEEL.PLAYERS p
    JOIN JPEEL.STATS2 s ON (p.ID = s.PLAYER_ID)
    JOIN JPEEL.GAME g ON (s.GAME_ID = g.ID)
--WHERE
    --s.RECEIVING_YARDS > 5
GROUP BY (g.SEASON)
ORDER BY (g.SEASON) DESC
), ru_avgs AS (
SELECT
    g.SEASON,
    ROUND(AVG(RUSHING_YARDS),2) AVG_RUSHING_YARDS,
    ROUND(AVG(RUSHING_TOUCHDOWNS),2) AVG_RUSHING_TOUCHDOWNS,
    ROUND(AVG(RUSHING_ATTEMPTS),2) AVG_RUSHING_ATTEMPTS
FROM
    JPEEL.PLAYERS p
    JOIN JPEEL.STATS2 s ON (p.ID = s.PLAYER_ID)
    JOIN JPEEL.GAME g ON (s.GAME_ID = g.ID)
--WHERE
    --s.RUSHING_YARDS > 5
GROUP BY (g.SEASON)
ORDER BY (g.SEASON) DESC
)
SELECT
    pa.SEASON,
    player.AVG_PASSING_YARDS AVG_PASSING_YARDS,
    player.AVG_PASSING_TOUCHDOWNS AVG_PASSING_TOUCHDOWNS,
    player.AVG_PASSING_INTERCEPTIONS AVG_PASSING_INTERCEPTIONS,
    player.AVG_PASSING_ATTEMPTS AVG_PASSING_ATTEMPTS,
    player.AVG_PASSING_COMPLETIONS AVG_PASSING_COMPLETIONS,
    player.AVG_RUSHING_YARDS AVG_RUSHING_YARDS,
    player.AVG_RUSHING_TOUCHDOWNS AVG_RUSHING_TOUCHDOWNS,
    player.AVG_RUSHING_ATTEMPTS AVG_RUSHING_ATTEMPTS,
    player.AVG_RECEIVING_YARDS AVG_RECEIVING_YARDS,
    player.AVG_RECEIVING_TOUCHDOWNS AVG_RECEIVING_TOUCHDOWNS,
    pa.AVG_PASSING_YARDS ALL_AVG_PASSING_YARDS,
    pa.AVG_PASSING_TOUCHDOWNS ALL_AVG_PASSING_TOUCHDOWNS,
    pa.AVG_PASSING_INTERCEPTIONS ALL_AVG_PASSING_INTERCEPTIONS,
    pa.AVG_PASSING_ATTEMPTS ALL_AVG_PASSING_ATTEMPTS,
    pa.AVG_PASSING_COMPLETIONS ALL_AVG_PASSING_COMPLETIONS,
    ru.AVG_RUSHING_YARDS ALL_AVG_RUSHING_YARDS,
    ru.AVG_RUSHING_TOUCHDOWNS ALL_AVG_RUSHING_TOUCHDOWNS,
    ru.AVG_RUSHING_ATTEMPTS ALL_AVG_RUSHING_ATTEMPTS,
    re.AVG_RECEIVING_YARDS ALL_AVG_RECEIVING_YARDS,
    re.AVG_RECEIVING_TOUCHDOWNS ALL_AVG_RECEIVING_TOUCHDOWNS
FROM
    pa_avgs pa
    JOIN ru_avgs ru ON (pa.SEASON = ru.SEASON)
    JOIN re_avgs re ON (pa.SEASON = re.SEASON)
    JOIN player_avgs player ON (pa.SEASON = player.SEASON)
    '''.strip()

    player = get_cursor().execute(player_sql, id=id)
    all_avgs = get_cursor().execute(all_avgs_sql, id=id)
    avgs_data = all_avgs.fetchall()
    avgs_headers = all_avgs.description
    seasons = [i[0] for i in avgs_data]

    return render_template('player/player.html',
                           player_data=player.fetchone(), player_data_headers=player.description,
                           seasons=seasons, avgs_data=avgs_data, avgs_headers=avgs_headers)

